/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.Panels;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Business.Business;
import model.ProductManagement.Product;
import model.Supplier.Supplier;

/**
 *
 * @author omraut
 */
public class MaximizeProfitPanel extends javax.swing.JPanel {

    private Business business;

    /**
     * Creates new form MaximizeProfitPanel
     */
    public MaximizeProfitPanel(Business business) {
        this.business = business;
        initComponents();
        refreshData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        MaximizeProfitTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        DisplayResultsArea = new javax.swing.JTextArea();
        OptimizePriceBtn = new javax.swing.JButton();
        ViewResultsBtn = new javax.swing.JButton();
        ResetOptimizationBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 255, 255));

        MaximizeProfitTable.setBackground(new java.awt.Color(102, 204, 255));
        MaximizeProfitTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Product Name", "Original Target Price", "Adjusted Target Price", "Sales Frequency", "Revenue Impact"
            }
        ));
        jScrollPane1.setViewportView(MaximizeProfitTable);

        DisplayResultsArea.setBackground(new java.awt.Color(102, 204, 255));
        DisplayResultsArea.setColumns(20);
        DisplayResultsArea.setRows(5);
        jScrollPane2.setViewportView(DisplayResultsArea);

        OptimizePriceBtn.setBackground(new java.awt.Color(102, 204, 255));
        OptimizePriceBtn.setText("Optimize Prices");
        OptimizePriceBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OptimizePriceBtnActionPerformed(evt);
            }
        });

        ViewResultsBtn.setBackground(new java.awt.Color(102, 204, 255));
        ViewResultsBtn.setText("View Results");
        ViewResultsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewResultsBtnActionPerformed(evt);
            }
        });

        ResetOptimizationBtn.setBackground(new java.awt.Color(102, 204, 255));
        ResetOptimizationBtn.setText("Reset Optimization");
        ResetOptimizationBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetOptimizationBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 685, Short.MAX_VALUE))
                .addGap(233, 233, 233))
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(OptimizePriceBtn)
                .addGap(18, 18, 18)
                .addComponent(ViewResultsBtn)
                .addGap(18, 18, 18)
                .addComponent(ResetOptimizationBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {OptimizePriceBtn, ResetOptimizationBtn, ViewResultsBtn});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OptimizePriceBtn)
                    .addComponent(ViewResultsBtn)
                    .addComponent(ResetOptimizationBtn))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {OptimizePriceBtn, ResetOptimizationBtn, ViewResultsBtn});

    }// </editor-fold>//GEN-END:initComponents

    private void OptimizePriceBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OptimizePriceBtnActionPerformed
        // TODO add your handling code here:
        optimizePrices();
    }//GEN-LAST:event_OptimizePriceBtnActionPerformed

    private void ViewResultsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewResultsBtnActionPerformed
        // TODO add your handling code here:
        viewResults();
    }//GEN-LAST:event_ViewResultsBtnActionPerformed

    private void ResetOptimizationBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetOptimizationBtnActionPerformed
        // TODO add your handling code here:
        resetTable();
    }//GEN-LAST:event_ResetOptimizationBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea DisplayResultsArea;
    private javax.swing.JTable MaximizeProfitTable;
    private javax.swing.JButton OptimizePriceBtn;
    private javax.swing.JButton ResetOptimizationBtn;
    private javax.swing.JButton ViewResultsBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

    private void optimizePrices() {
        DefaultTableModel model = (DefaultTableModel) MaximizeProfitTable.getModel();
        for (int i = 0; i < model.getRowCount(); i++) {
            double currentPrice = (double) model.getValueAt(i, 1);
        }
        JOptionPane.showMessageDialog(this, "Prices optimized for maximum profit!");
    }

    private void viewResults() {
        DefaultTableModel model = (DefaultTableModel) MaximizeProfitTable.getModel();
        double totalImpact = 0.0;

        for (int i = 0; i < model.getRowCount(); i++) {
            double impact = (double) model.getValueAt(i, 4);
            totalImpact += impact;
        }

        DisplayResultsArea.setText("Total Revenue Impact: $" + totalImpact);
    }

    private void resetTable() {
        refreshData(); 
        JOptionPane.showMessageDialog(this, "Table reset successfully!");
        DisplayResultsArea.setText("");
    }

    
}
